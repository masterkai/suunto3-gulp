"use strict";var _createClass=function(){function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Carousel=function(){function c(e,t,i,n,r,s){var a=this;_classCallCheck(this,c),this.carousel=e,this.imgContainer=t,this.leftBtn=i,this.rightBtn=n,this.images=r,this.timeout=s,this.sliderSize=this.carousel.clientWidth,this.index=0,this.resizeTimer=null,this.pagination=this.carousel.querySelector(".pagination"),this.interval=!!this.timeout&&setInterval(function(){return a.run()},this.timeout),this.resetSize(),this.windowResize(),this.controller(),this.createCircle(),this.addActiveCircle(this.index)}return _createClass(c,[{key:"currentIndex",value:function(){return this.index}},{key:"slideTo",value:function(e){this.index=e,this.changeImage(),this.addActiveCircle(e)}},{key:"controller",value:function(){var e=this,t=this;this.rightBtn.addEventListener("click",function(){t.index++,e.changeImage(),e.addActiveCircle(e.index),e.resetInterval(),e.currentIndex()}),this.leftBtn.addEventListener("click",function(){t.index--,e.changeImage(),e.addActiveCircle(e.index),e.resetInterval(),e.currentIndex()})}},{key:"windowResize",value:function(){var t=this;window.addEventListener("resize",function(e){t.resizeTimer&&clearTimeout(t.resizeTimer),t.resizeTimer=setTimeout(function(){t.resetSize()},500)})}},{key:"resetSize",value:function(){var t=this;this.index=0,this.changeImage(),this.sliderSize=this.carousel.clientWidth,window.innerWidth<=500?this.images.forEach(function(e){return e.style.width="100%"}):this.images.forEach(function(e){return e.style.width=""+t.carousel.clientWidth})}},{key:"createCircle",value:function(){for(var e=0;e<this.images.length;e++){var t=document.createElement("div");t.classList.add("circle"),this.pagination.insertAdjacentElement("afterbegin",t)}}},{key:"addActiveCircle",value:function(e){var t=this.pagination.querySelectorAll(".circle");t.forEach(function(e){return e.classList.remove("active")}),t[e].classList.add("active")}},{key:"run",value:function(){this.index++,this.changeImage(),this.addActiveCircle(this.index)}},{key:"resetInterval",value:function(){var e=this;this.timeout&&(console.log("interval has been reset!!"),clearInterval(this.interval),this.interval=setInterval(function(){return e.run()},this.timeout))}},{key:"changeImage",value:function(){this.index>this.images.length-1?this.index=0:this.index<0&&(this.index=this.images.length-1),this.imgContainer.style.transform="translateX("+-this.index*this.sliderSize+"px)"}}]),c}();
"use strict";$(function(){var a=this,s={last:0};$("#features").each(function(){var i=$(a).find(".flexContainer--feature").find(".feature"),c=$(a).find(".flexContainer--featureTop .watchBox").find(".watch");i.each(function(e,t){$(t).on("click",function(){c.eq(s.last).css({display:"none",opacity:0}),c.eq(e).css({display:"block",opacity:1}),s.last=e;var a=$(t);a.hasClass("active")||(i.removeClass("active"),a.addClass("active"))})}),i.eq(0).trigger("click")})});
"use strict";$("#GOTOP").click(function(){jQuery("html,body").animate({scrollTop:0},400)}),$(window).scroll(function(){120<$(this).scrollTop()?$("#GOTOP").fadeIn(300).addClass("active"):$("#GOTOP").stop().fadeOut(300).removeClass("active")});
"use strict";var _createClass=function(){function n(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var YouTubeModal=function(){function n(e,t,a){_classCallCheck(this,n),this.videoId=e,this.playerId=t,this.playBtn=document.getElementById(a)?document.getElementById(a):null,this.player=void 0,this.onPlayerReady=this.onPlayerReady.bind(this),this.mountYouTubeApi(),this.controller()}return _createClass(n,[{key:"mountYouTubeApi",value:function(){var e=document.createElement("script");e.src="https://www.youtube.com/iframe_api";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}},{key:"createModalBody",value:function(){return'\n        <div class="Empy-modal-header Empy-modal-header--noContentOnlyCloseBtn"><button class="btn btn-empy-link closeBtn"></button></div>\n        <div class="Empy-modal-body">\n            <div id="'+this.playerId+'"></div>            \n        </div>'}},{key:"controller",value:function(){var e=this,t=document.createElement("div");t.className="Empy-mask";var a=document.createElement("div");a.className="Empy-modal",t.appendChild(a),this.playBtn&&this.playBtn.addEventListener("click",function(){a.textContent="",a.className="Empy-modal Empy-modal--youtube",a.insertAdjacentHTML("afterbegin",e.createModalBody()),document.body.insertAdjacentElement("afterbegin",t),document.querySelector(".closeBtn").addEventListener("click",function(){t.classList.remove("show"),e.pauseVideo()}),t.classList.add("show"),e.onYouTubeIframeAPIReady()})}},{key:"onYouTubeIframeAPIReady",value:function(){this.player=new YT.Player(this.playerId,{height:"315",width:"560",videoId:this.videoId,playerVars:{rel:0,showinfo:0,ecver:2},events:{onStateChange:this.onPlayerStateChange,onReady:this.onPlayerReady}})}},{key:"onPlayerReady",value:function(){console.log("video player is ready"),this.activateVideo()}},{key:"onPlayerStateChange",value:function(e){e.data==YT.PlayerState.PLAYING?console.log("player is playing"):console.log("player is not playing")}},{key:"stopVideo",value:function(){this.player.stopVideo()}},{key:"activateVideo",value:function(){this.player.playVideo()}},{key:"pauseVideo",value:function(){console.log("pause the video player and close the video modal."),this.player.pauseVideo()}}]),n}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
